services:
  # Backend API (.NET)
  backend:
    build:
      context: ./backend
      dockerfile: RentManager.API/Dockerfile
    container_name: rentmanager-backend
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: ${CONNECTION_STRING}
      FrontendUrl: http://localhost:3000
      UsePostgres: "true"
      Stripe__SecretKey: ${STRIPE_SECRET_KEY:-}
      Stripe__PublishableKey: ${STRIPE_PUBLISHABLE_KEY:-}
      Stripe__WebhookSecret: ${STRIPE_WEBHOOK_SECRET:-}
      Zitadel__Authority: ${ZITADEL_AUTHORITY:-}
      Zitadel__Audience: ${ZITADEL_AUDIENCE:-}
    ports:
      - "5000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - rentmanager-network
    restart: unless-stopped

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
        REACT_APP_BASE_URL: ${REACT_APP_BASE_URL:-http://localhost:3000}
        REACT_APP_ZITADEL_AUTHORITY: ${REACT_APP_ZITADEL_AUTHORITY:-}
        REACT_APP_ZITADEL_CLIENT_ID: ${REACT_APP_ZITADEL_CLIENT_ID:-}
        REACT_APP_REDIRECT_URI: ${REACT_APP_REDIRECT_URI:-http://localhost:3000/auth/callback}
        REACT_APP_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-}
    container_name: rentmanager-frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:80/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - rentmanager-network
    restart: unless-stopped

networks:
  rentmanager-network:
    driver: bridge
